name: Android Build

# Controls when the action will run. Triggers the workflow on creation of 
# tags.  Creating new 'versions' via github is the most straightforward 
# way of doing this.
on:
  #create:
  #  tags:
  #    - '*'
   push
  #   branches: [ develop ] 

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_VERSION: 2021.1.1f1
  
jobs:
  build:
    name: Build Unity Project
    runs-on: ubuntu-18.04

    # Setup Steps

    steps:
      
    #- name: Install OpenConnect
    #  run: sudo add-apt-repository ppa:phusen/openconnect && sudo apt-get update && sudo apt-get install openconnect
      
    #- name: Connect to VPN
    #  run: echo ${{ secrets.VPN_PASSWORD }} | sudo openconnect --protocol=gp -u ${{ secrets.VPN_USERNAME }} --passwd-on-stdin soe.vpn.wisc.edu &
      
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        lfs: true
      
    - name: Checkout submodules
      uses: srt32/git-actions@v0.0.3
      with:
        args: git submodule update --init --recursive

    # Extracts branch name into BRANCH environment variable
    - name: Extract branch name
      shell: bash
      run: echo "BRANCH=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')" >> $GITHUB_ENV

    # Extracts version tag into VERSION environment variable
    - name: Extract version name
      shell: bash
      run: echo "VERSION=$(echo ${GITHUB_REF#refs/tags/} | sed 's/\//_/g')" >> $GITHUB_ENV
      
    - name: Free disk space
      run: |
        sudo apt-get remove aria2 ansible azure-cli shellcheck rpm xorriso zsync \
          clang-6.0 lldb-6.0 lld-6.0 clang-format-6.0 clang-8 lldb-8 lld-8 clang-format-8 \
          clang-9 lldb-9 lld-9 clangd-9 clang-format-9 dotnet-sdk-3.0 dotnet-sdk-3.1=3.1.101-1 \
          esl-erlang firefox g++-8 g++-9 gfortran-8 gfortran-9 google-chrome-stable \
          google-cloud-sdk ghc-8.0.2 ghc-8.2.2 ghc-8.4.4 ghc-8.6.2 ghc-8.6.3 ghc-8.6.4 \
          ghc-8.6.5 ghc-8.8.1 ghc-8.8.2 ghc-8.8.3 ghc-8.10.1 cabal-install-2.0 cabal-install-2.2 \
          cabal-install-2.4 cabal-install-3.0 cabal-install-3.2 heroku imagemagick \
          libmagickcore-dev libmagickwand-dev libmagic-dev ant ant-optional kubectl \
          mercurial apt-transport-https mono-complete mysql-client libmysqlclient-dev \
          mysql-server mssql-tools unixodbc-dev yarn bazel chrpath libssl-dev libxft-dev \
          libfreetype6 libfreetype6-dev libfontconfig1 libfontconfig1-dev php7.1 php7.1-bcmath \
          php7.1-bz2 php7.1-cgi php7.1-cli php7.1-common php7.1-curl php7.1-dba php7.1-dev \
          php7.1-enchant php7.1-fpm php7.1-gd php7.1-gmp php7.1-imap php7.1-interbase php7.1-intl \
          php7.1-json php7.1-ldap php7.1-mbstring php7.1-mcrypt php7.1-mysql php7.1-odbc \
          php7.1-opcache php7.1-pgsql php7.1-phpdbg php7.1-pspell php7.1-readline php7.1-recode \
          php7.1-snmp php7.1-soap php7.1-sqlite3 php7.1-sybase php7.1-tidy php7.1-xml \
          php7.1-xmlrpc php7.1-xsl php7.1-zip php7.2 php7.2-bcmath php7.2-bz2 php7.2-cgi \
          php7.2-cli php7.2-common php7.2-curl php7.2-dba php7.2-dev php7.2-enchant php7.2-fpm \
          php7.2-gd php7.2-gmp php7.2-imap php7.2-interbase php7.2-intl php7.2-json php7.2-ldap \
          php7.2-mbstring php7.2-mysql php7.2-odbc php7.2-opcache php7.2-pgsql php7.2-phpdbg \
          php7.2-pspell php7.2-readline php7.2-recode php7.2-snmp php7.2-soap php7.2-sqlite3 \
          php7.2-sybase php7.2-tidy php7.2-xml php7.2-xmlrpc php7.2-xsl php7.2-zip php7.3 \
          php7.3-bcmath php7.3-bz2 php7.3-cgi php7.3-cli php7.3-common php7.3-curl php7.3-dba \
          php7.3-dev php7.3-enchant php7.3-fpm php7.3-gd php7.3-gmp php7.3-imap php7.3-interbase \
          php7.3-intl php7.3-json php7.3-ldap php7.3-mbstring php7.3-mysql php7.3-odbc \
          php7.3-opcache php7.3-pgsql php7.3-phpdbg php7.3-pspell php7.3-readline php7.3-recode \
          php7.3-snmp php7.3-soap php7.3-sqlite3 php7.3-sybase php7.3-tidy php7.3-xml \
          php7.3-xmlrpc php7.3-xsl php7.3-zip php7.4 php7.4-bcmath php7.4-bz2 php7.4-cgi \
          php7.4-cli php7.4-common php7.4-curl php7.4-dba php7.4-dev php7.4-enchant php7.4-fpm \
          php7.4-gd php7.4-gmp php7.4-imap php7.4-interbase php7.4-intl php7.4-json php7.4-ldap \
          php7.4-mbstring php7.4-mysql php7.4-odbc php7.4-opcache php7.4-pgsql php7.4-phpdbg \
          php7.4-pspell php7.4-readline php7.4-snmp php7.4-soap php7.4-sqlite3 php7.4-sybase \
          php7.4-tidy php7.4-xml php7.4-xmlrpc php7.4-xsl php7.4-zip php-amqp php-apcu \
          php-igbinary php-memcache php-memcached php-mongodb php-redis php-xdebug \
          php-zmq snmp pollinate libpq-dev postgresql-client powershell ruby-full \
          sphinxsearch subversion mongodb-org -yq >/dev/null 2>&1
        sudo apt-get autoremove -y >/dev/null 2>&1
        sudo apt-get autoclean -y >/dev/null 2>&1
        sudo rm -rf /usr/local/lib/android >/dev/null 2>&1
        docker rmi $(docker image ls -aq) >/dev/null 2>&1
        
    # Unity Build Steps

    - name: Cache Library folder
      uses: actions/cache@v2
      with:
        path: Library
        key: Library
    
    #- name: Run tests
    #  uses: webbertakken/unity-test-runner@v1.3
    #  with:
    #    unityVersion: ${{ env.UNITY_VERSION }}
    
    - name: Build project
      uses: game-ci/unity-builder@v2
      with:
        unityVersion: ${{ env.UNITY_VERSION }}
        targetPlatform: Android
        #buildName: PenguinsVR
        #customParameters: '-myParameter myValue -myBoolean -ThirdParameter andItsValue'
    
    
    # Deploy Steps
    # 
    #android_${{ env.VERSION }}
    #- name: Upload build as artifact
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: AndroidBuild
    #    path: build/Android/Android.apk
        
    #- name: Make directory
    #  shell: bash
    #  run: mkdir -p /github/workspace/Assets/release
    
    - name: Copy file
      uses: canastro/copy-action@0.0.2
      with:
        source: build/Android/Android.apk
        target: /github/workspace/Release/PenguinsVR.apk
        
    #- name: Github Pull
    #  uses: actions/checkout@master
    #  with:
    #    fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
        #persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
        
    - name: GitHub Commit & Push
      uses: actions-js/push@v1.2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        force: true
        branch: 'main'
    
    # - name: Upload to web server via rsync
      # uses: burnett01/rsync-deployments@4.1
      # with:
        # switches: -avzr --delete
        # path: build/Android/Android/*
        # remote_path: ${{ secrets.DEPLOY_DIR }}/${{ env.BRANCH }}
        # remote_host: ${{ secrets.DEPLOY_HOST }}
        # remote_user: ${{ secrets.DEPLOY_USER }}
        # remote_key: ${{ secrets.DEPLOY_KEY }}